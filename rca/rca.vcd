$date
	Sat Feb  8 01:31:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RCA_TB $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " cout $end
$var wire 5 ) carry [4:0] $end
$scope begin FA_LOOP[0] $end
$scope module FA $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , cin $end
$var wire 1 - cout $end
$var wire 1 . sum $end
$upscope $end
$upscope $end
$scope begin FA_LOOP[1] $end
$scope module FA $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 1 3 sum $end
$upscope $end
$upscope $end
$scope begin FA_LOOP[2] $end
$scope module FA $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cin $end
$var wire 1 7 cout $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$scope begin FA_LOOP[3] $end
$scope module FA $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#10
b10 !
b10 (
13
11
b10 )
1-
1+
1*
b1 $
b1 '
b1 #
b1 &
#20
18
16
b110 )
12
b100 !
b100 (
03
1/
b11 #
b11 &
#30
0"
0<
06
02
0;
13
07
01
18
1.
b0 )
0-
b1111 !
b1111 (
1=
15
0*
19
b101 $
b101 '
b1010 #
b1010 &
#40
1"
1<
0=
1;
17
08
16
12
03
11
b0 !
b0 (
0.
b11110 )
1-
05
1*
14
b1 $
b1 '
b1111 #
b1111 &
#50
13
18
1=
b1111 !
b1111 (
1.
1,
10
15
1:
b11111 )
1%
b1111 $
b1111 '
#60
